name: Build PR(s) and master branch.
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [opened, edited, synchronize]
jobs:
  build-windows-msvc:
    name: Build sources on amd64 for ${{ matrix.os }} with MSVC
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 48
      fail-fast: false
      matrix:
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Build on ${{ matrix.os }} with vs-2019
        run: |
          .\scripts\win_build.bat
      - name: Run unit tests.
        run: |
          ctest -C Debug --test-dir .\tests\
  build-windows-msys2:
    name: Build sources on amd64 for ${{ matrix.os }} with MSYS2
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 48
      fail-fast: false
      matrix:
        os: [windows-latest]
    env:
      PATH: c:/Program Files/Git/cmd;c:/Program Files (x86)/Inno Setup 6;c:/Windows/system32;C:/Windows/System32/WindowsPowerShell/v1.0
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-binutils
            mingw-w64-x86_64-libtool
      - name: Build on ${{ matrix.os }} with MSYS2
        shell: msys2 {0}
        run: |
          cmake -G "MSYS Makefiles" -DCMT_TESTS=On .
          cmake --build .
      - name: Run unit tests.
        run: |
          ctest -C Debug --test-dir .\tests\
  build-unix:
    name: Build sources on amd64 for ${{ matrix.os }} - ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 48
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [ gcc, clang ]
    steps:
      - uses: actions/checkout@v2
      - name: Build on ${{ matrix.os }} with ${{ matrix.compiler }}
        run: |
          echo "CC = $CC, CXX = $CXX"
          cmake -DCMT_TESTS=On .
          make all
          make test
        env:
          CC: ${{ matrix.compiler }}
